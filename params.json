{"name":"PinCushion","tagline":"","body":"PinCushion, a password manager in C#\r\n\r\nCopyright (c) 2013, 2014 Armin Altorffer\r\n\r\nPinCushion is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\r\n\r\nPinCushion is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\r\n\r\n# Features:\r\n\r\n- Create an infinite number of profiles, each with an infinite number of services, each of which with an infinite number of accounts.\r\n- Cross-platform, coded in C# and fully functional in both .NET and Mono.\r\n- Data is encrypted both on disk and in memory with AES 256-bit in conjunction with SHA512 hashes although in-memory encryption is only enabled on Windows as ram scrapers are unlikely on Linux and other *nix platforms supported by Mono.\r\n- Targeting .NET 4.5 to avoid compatibility with depricated and unsupported operating systems such as Windows XP.\r\n- Very intuitive, easy to use interface.\r\n\r\n### Compiling PinCushion\r\n\r\nCompiling PinCushion should be relatively straightforward.\r\n\r\n1. From [this page](https://github.com/Altorffer/PinCushion) either clone the project using Git or just download the .ZIP.\r\n\r\n2. Open the solution (PinCushion.sln) in your favourite IDE (it has been compiled successfully in both Visual Studio Express as well as MonoDevelop).\r\n\r\n3. From the configurations menu (where you are able to select which configuration to use for the build) pick whichever platform you are building it for.\r\n  * .NET or Mono (both available in AnyCPU and x64)\r\n\r\n4. Build it and you should be able to find the executable in the PinCushion/bin subfolder of wherever you cloned/extracted PinCushion to.\r\n\r\n5. Copy that executable to wherever you want and run it, as you're done! Well, it is a single file product (not counting the data file in which your personal data will be stored), what did you expect?\r\n\r\n# History and background\r\n\r\nI first created PinCushion back in 2013, during which period I actually also used GitHub to control its source code. However, I decided to take a step back from most of my online activities for a period and during this time I simply continued using it personally without giving much further thought to its development. Originally I had developed it using Visual Studio Express, as I was a Windows user at the time and had always assumed it would run just fine in Linux as well as Mono is binary compatible with .NET. Then, earlier this year, I switched to using Linux and started using PinCushion in Linux and found it working but not as I had intended. Some things simply did not translate too well to Ubuntu's Unity environment. So I decided to install MonoDevelop and resumed developing PinCushion to make it more crossplatform friendly. By now it has reached a point where the experience should be essentially equal in both Windows as well as in Linux. There are some technical differences but those are nothing the normal user should be concerned about. In fact, I can build the Windows/.NET version just fine using my Linux/Mono PCs. Anyhow, because I still want people to see my work and hopefully have them use PinCushion for their own password management activities I decided to reintroduce it to GitHub. So, here we are.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}